openapi: 3.0.3
info:
  title: Slow query detector
  description: Service that provides facilities to view and filter slow queries
  version: 0.0.1
servers:
  - url: 'http://localhost:8080'
paths:
  /queries:
    get:
      summary: "Find queries"
      parameters:
        - in: query
          name: command
          schema: {
            type: string,
            enum: ["insert", "select", "update", "delete"],
            example: "insert"
          }
          required: false
        - in: query
          name: sort
          schema: {
            type: string,
            enum: ["slow-to-fast", "fast-to-slow"],
            example: "slow-to-fast",
            default: "slow-to-fast"
          }
          required: false
        - $ref: "#/components/parameters/PerPage"
        - $ref: "#/components/parameters/Page"
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueriesResponse'
        400: { $ref: '#/components/responses/BadRequest' }
        500: { $ref: '#/components/responses/InternalServerError'}

components:
  parameters:
    Page:
      name: page
      in: query
      required: false
      schema: { type: integer, example: 1, default: 1 }
    PerPage:
      name: per-page
      in: query
      required: false
      schema: { type: integer, example: 10, default: 10 }

  schemas:
    QueriesResponse:
      type: object
      properties:
        items:
          type: array
          items:
            type: object
            properties:
              queryId: { type: integer }
              query: { type: string }
              maxExecutionTime: { type: number }
              meanExecutionTime: { type: number }
        pagination:
          type: object
          properties:
            totalItems:
              type: integer
              example: 23
      required: [items, pagination]

    BadRequestResponse:
      type: object
      required: [msg, error]
      properties:
        msg: { type: string }
        error: { type: string }
      example:
        msg: "page parameter should be an integer"
        field: "field name"
    InternalServerErrorResponse:
      type: object
      required: [msg, error]
      properties:
        msg: {type: string}
        error: {type: string}
      example:
        msg: "internal server error"
        error: "some error"

  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequestResponse'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalServerErrorResponse'